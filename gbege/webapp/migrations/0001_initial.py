# Generated by Django 4.1 on 2022-08-06 18:09

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Blacklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('twitter_id', models.CharField(max_length=50)),
                ('category', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'blacklist',
            },
        ),
        migrations.CreateModel(
            name='EventTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=10)),
                ('synonyms', models.CharField(max_length=60)),
                ('desc', models.CharField(max_length=40)),
            ],
            options={
                'db_table': 'event_tags',
            },
        ),
        migrations.CreateModel(
            name='Liveevents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.CharField(max_length=200)),
                ('source', models.CharField(max_length=38)),
                ('noise', models.IntegerField()),
                ('value', models.IntegerField()),
                ('notification_level', models.IntegerField()),
                ('confirmed', models.CharField(blank=True, max_length=10, null=True)),
                ('event_tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.eventtags')),
            ],
            options={
                'db_table': 'liveEvents',
            },
        ),
        migrations.CreateModel(
            name='Locations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=30)),
                ('alias', models.CharField(max_length=30)),
                ('coord', django.contrib.gis.db.models.fields.PointField(srid=4326)),
            ],
            options={
                'db_table': 'locations',
            },
        ),
        migrations.CreateModel(
            name='States',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=15)),
                ('coord', django.contrib.gis.db.models.fields.PointField(srid=4326)),
            ],
            options={
                'db_table': 'states',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'subscription_types',
            },
        ),
        migrations.CreateModel(
            name='UserSubscriptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_level', models.IntegerField()),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='webapp.locations')),
                ('subscription_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='webapp.subscriptiontypes')),
            ],
            options={
                'db_table': 'user_subscriptions',
            },
        ),
        migrations.CreateModel(
            name='Whitelist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('twitter_id', models.CharField(max_length=50)),
                ('category', models.CharField(max_length=17)),
            ],
            options={
                'db_table': 'whitelist',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.OneToOneField(db_column='id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='webapp.usersubscriptions')),
                ('name', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=20)),
                ('twitter_id', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='TweetData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tweet', models.CharField(max_length=200)),
                ('twitter_user_id', models.CharField(max_length=50)),
                ('tweet_date', models.CharField(max_length=10)),
                ('tweet_time', models.CharField(max_length=10)),
                ('status', models.CharField(blank=True, max_length=33, null=True)),
                ('value', models.IntegerField()),
                ('confirmed', models.CharField(blank=True, max_length=10, null=True)),
                ('live_event', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='webapp.liveevents')),
            ],
            options={
                'db_table': 'tweet_data',
            },
        ),
        migrations.CreateModel(
            name='Recommendations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendation', models.CharField(blank=True, max_length=300, null=True)),
                ('live_event', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='webapp.liveevents')),
            ],
            options={
                'db_table': 'recommendations',
            },
        ),
        migrations.CreateModel(
            name='NotificationLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datesent', models.CharField(db_column='dateSent', max_length=10)),
                ('user_subscriptions', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.usersubscriptions')),
            ],
            options={
                'db_table': 'notification_logs',
            },
        ),
        migrations.AddField(
            model_name='locations',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.states'),
        ),
        migrations.AddField(
            model_name='liveevents',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.locations'),
        ),
        migrations.AddField(
            model_name='usersubscriptions',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.users'),
        ),
        migrations.AlterUniqueTogether(
            name='locations',
            unique_together={('location', 'state')},
        ),
        migrations.AlterUniqueTogether(
            name='usersubscriptions',
            unique_together={('user', 'location')},
        ),
    ]
